/* Visit https://aka.ms/tsconfig to read more about this file */
{
  "compilerOptions": {
    /* Language and Environment */
    "target": "ESNext"                            /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "lib": ["ESNext"]                             /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
    "experimentalDecorators": true                /* Enable experimental support for TC39 stage 2 draft decorators. */,
    "useDefineForClassFields": true               /* Emit ECMAScript-standard-compliant class fields. */,

    /* Modules */
    "module": "CommonJS"                          /* Specify what module code is generated. */,
    "moduleResolution": "Node"                    /* Specify how TypeScript looks up a file from a given module specifier. */,
    "baseUrl": "src/main"                         /* Specify the base directory to resolve non-relative module names. */,
    "resolveJsonModule": true                     /* Enable importing .json files. */,

    /* JavaScript Support */
    "allowJs": false                              /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,

    /* Emit */
    "declaration": true                           /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
    "declarationMap": true                        /* Create sourcemaps for d.ts files. */,
    "sourceMap": true                             /* Create source map files for emitted JavaScript files. */,
    "outDir": "build"                             /* Specify an output folder for all emitted files. */,
    "removeComments": true                        /* Disable emitting comments. */,
    "importsNotUsedAsValues": "remove"            /* Specify emit/checking behavior for imports that are only used for types. */,
    "noEmitOnError": true                         /* Disable emitting files if any type checking errors are reported. */,

    /* Interop Constraints */
    "isolatedModules": true                       /* Ensure that each file can be safely transpiled without relying on other imports. */,
    "allowSyntheticDefaultImports": true          /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": false                      /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true      /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    "strict": true                                /* Enable all strict type-checking options. */,
    "noImplicitAny": true                         /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true                      /* When type checking, take into account 'null' and 'undefined'. */,
    "strictFunctionTypes": true                   /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
    "noImplicitThis": true                        /* Enable error reporting when 'this' is given the type 'any'. */,
    "useUnknownInCatchVariables": true            /* Default catch clause variables as 'unknown' instead of 'any'. */,
    "alwaysStrict": true                          /* Ensure 'use strict' is always emitted. */,
    "noUnusedLocals": true                        /* Enable error reporting when local variables aren't read. */,
    "noUnusedParameters": true                    /* Raise an error when a function parameter isn't read. */,
    "noFallthroughCasesInSwitch": true            /* Enable error reporting for fallthrough cases in switch statements. */,

    /* Completeness */
    "skipDefaultLibCheck": true                   /* Skip type checking .d.ts files that are included with TypeScript. */,
    "skipLibCheck": true                          /* Skip type checking all .d.ts files. */
  },
  "include": ["electron"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
